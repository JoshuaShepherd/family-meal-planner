import { Ingredient, Meal, CalendarMeal, ShoppingList, ShoppingListItem, MealIngredient, IngredientCategory } from '../types';
import { v4 as uuidv4 } from 'uuid';
import { format, addDays } from 'date-fns';

// Mock ingredient categories with icons and colors
export const INGREDIENT_CATEGORIES: IngredientCategory[] = [
  { name: 'produce', color: 'bg-green-100 text-green-800', icon: '🥕' },
  { name: 'meat', color: 'bg-red-100 text-red-800', icon: '🥩' },
  { name: 'dairy', color: 'bg-blue-100 text-blue-800', icon: '🥛' },
  { name: 'pantry', color: 'bg-yellow-100 text-yellow-800', icon: '🥫' },
  { name: 'bakery', color: 'bg-orange-100 text-orange-800', icon: '🍞' },
  { name: 'frozen', color: 'bg-cyan-100 text-cyan-800', icon: '🧊' },
  { name: 'snacks', color: 'bg-purple-100 text-purple-800', icon: '🍿' },
];

// Mock ingredients data with high-quality food images
export const mockIngredients: Ingredient[] = [
  {
    id: uuidv4(),
    name: 'Chicken Breast',
    category: 'meat',
    imageUrl: '🐔',
    defaultUnit: 'lbs',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Ground Beef',
    category: 'meat',
    imageUrl: '🥩',
    defaultUnit: 'lbs',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Salmon Fillet',
    category: 'meat',
    imageUrl: '🐟',
    defaultUnit: 'lbs',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Pasta',
    category: 'pantry',
    imageUrl: '🍝',
    defaultUnit: 'boxes',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Rice',
    category: 'pantry',
    imageUrl: '🍚',
    defaultUnit: 'cups',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Tomatoes',
    category: 'produce',
    imageUrl: '🍅',
    defaultUnit: 'items',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Onions',
    category: 'produce',
    imageUrl: '🧅',
    defaultUnit: 'items',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Bell Peppers',
    category: 'produce',
    imageUrl: '🫑',
    defaultUnit: 'items',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Broccoli',
    category: 'produce',
    imageUrl: '🥦',
    defaultUnit: 'heads',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Milk',
    category: 'dairy',
    imageUrl: '🥛',
    defaultUnit: 'gallons',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Eggs',
    category: 'dairy',
    imageUrl: '🥚',
    defaultUnit: 'dozens',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Cheese',
    category: 'dairy',
    imageUrl: '🧀',
    defaultUnit: 'blocks',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Bread',
    category: 'bakery',
    imageUrl: '🍞',
    defaultUnit: 'loaves',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Olive Oil',
    category: 'pantry',
    imageUrl: '🫒',
    defaultUnit: 'bottles',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Garlic',
    category: 'produce',
    imageUrl: '🧄',
    defaultUnit: 'bulbs',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Spinach',
    category: 'produce',
    imageUrl: '🥬',
    defaultUnit: 'bags',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  // Additional ingredients for variety
  {
    id: uuidv4(),
    name: 'Avocado',
    category: 'produce',
    imageUrl: '🥑',
    defaultUnit: 'items',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Mushrooms',
    category: 'produce',
    imageUrl: '🍄',
    defaultUnit: 'lbs',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Carrots',
    category: 'produce',
    imageUrl: '🥕',
    defaultUnit: 'lbs',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Potatoes',
    category: 'produce',
    imageUrl: '🥔',
    defaultUnit: 'lbs',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Bananas',
    category: 'produce',
    imageUrl: '🍌',
    defaultUnit: 'bunches',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Apples',
    category: 'produce',
    imageUrl: '🍎',
    defaultUnit: 'bags',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  // Additional ingredients for Southern comfort meals
  {
    id: uuidv4(),
    name: 'Breadcrumbs',
    category: 'pantry',
    imageUrl: '🍞',
    defaultUnit: 'containers',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Ketchup',
    category: 'pantry',
    imageUrl: '🍅',
    defaultUnit: 'bottles',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Salt',
    category: 'pantry',
    imageUrl: '🧂',
    defaultUnit: 'containers',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Black Pepper',
    category: 'pantry',
    imageUrl: '🌶️',
    defaultUnit: 'containers',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Butter',
    category: 'dairy',
    imageUrl: '🧈',
    defaultUnit: 'sticks',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Green Beans',
    category: 'produce',
    imageUrl: '🫘',
    defaultUnit: 'cans',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Spaghetti Sauce',
    category: 'pantry',
    imageUrl: '🍝',
    defaultUnit: 'jars',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Spaghetti Noodles',
    category: 'pantry',
    imageUrl: '🍝',
    defaultUnit: 'boxes',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Garlic Powder',
    category: 'pantry',
    imageUrl: '🧄',
    defaultUnit: 'containers',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Margarine',
    category: 'dairy',
    imageUrl: '🧈',
    defaultUnit: 'containers',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Beef Gravy',
    category: 'pantry',
    imageUrl: '🥫',
    defaultUnit: 'cans',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Corn',
    category: 'produce',
    imageUrl: '🌽',
    defaultUnit: 'cans',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Cream of Mushroom Soup',
    category: 'pantry',
    imageUrl: '🥫',
    defaultUnit: 'cans',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Celery',
    category: 'produce',
    imageUrl: '🥬',
    defaultUnit: 'stalks',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Canned Tuna',
    category: 'pantry',
    imageUrl: '🐟',
    defaultUnit: 'cans',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Egg Noodles',
    category: 'pantry',
    imageUrl: '🍜',
    defaultUnit: 'bags',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Peas',
    category: 'frozen',
    imageUrl: '🟢',
    defaultUnit: 'bags',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Potato Chips',
    category: 'snacks',
    imageUrl: '🥔',
    defaultUnit: 'bags',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Pork Chops',
    category: 'meat',
    imageUrl: '🥩',
    defaultUnit: 'lbs',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Flour',
    category: 'pantry',
    imageUrl: '🌾',
    defaultUnit: 'bags',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Chicken Broth',
    category: 'pantry',
    imageUrl: '🍲',
    defaultUnit: 'cartons',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Manwich Sauce',
    category: 'pantry',
    imageUrl: '🥫',
    defaultUnit: 'cans',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Hamburger Buns',
    category: 'bakery',
    imageUrl: '🍔',
    defaultUnit: 'packages',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Chicken Pieces',
    category: 'meat',
    imageUrl: '🍗',
    defaultUnit: 'lbs',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Vegetable Oil',
    category: 'pantry',
    imageUrl: '🫒',
    defaultUnit: 'bottles',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Kidney Beans',
    category: 'pantry',
    imageUrl: '🫘',
    defaultUnit: 'cans',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Chili Powder',
    category: 'pantry',
    imageUrl: '🌶️',
    defaultUnit: 'containers',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Saltine Crackers',
    category: 'pantry',
    imageUrl: '🍘',
    defaultUnit: 'boxes',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Cube Steak',
    category: 'meat',
    imageUrl: '🥩',
    defaultUnit: 'lbs',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Elbow Macaroni',
    category: 'pantry',
    imageUrl: '🍝',
    defaultUnit: 'boxes',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Diced Tomatoes',
    category: 'pantry',
    imageUrl: '🍅',
    defaultUnit: 'cans',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Tomato Sauce',
    category: 'pantry',
    imageUrl: '🍅',
    defaultUnit: 'cans',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Hot Dogs',
    category: 'meat',
    imageUrl: '🌭',
    defaultUnit: 'packages',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Pork & Beans',
    category: 'pantry',
    imageUrl: '🫘',
    defaultUnit: 'cans',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Chicken Drumsticks',
    category: 'meat',
    imageUrl: '🍗',
    defaultUnit: 'lbs',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Paprika',
    category: 'pantry',
    imageUrl: '🌶️',
    defaultUnit: 'containers',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Onion Soup Mix',
    category: 'pantry',
    imageUrl: '🧅',
    defaultUnit: 'packets',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Bisquick Mix',
    category: 'pantry',
    imageUrl: '🥞',
    defaultUnit: 'boxes',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Fish Sticks',
    category: 'frozen',
    imageUrl: '🐟',
    defaultUnit: 'boxes',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Kraft Mac & Cheese',
    category: 'pantry',
    imageUrl: '🧀',
    defaultUnit: 'boxes',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Bologna',
    category: 'meat',
    imageUrl: '🥩',
    defaultUnit: 'packages',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Mayonnaise',
    category: 'pantry',
    imageUrl: '🥪',
    defaultUnit: 'jars',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Mustard',
    category: 'pantry',
    imageUrl: '🌭',
    defaultUnit: 'bottles',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Smoked Sausage',
    category: 'meat',
    imageUrl: '🌭',
    defaultUnit: 'packages',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Cabbage',
    category: 'produce',
    imageUrl: '🥬',
    defaultUnit: 'heads',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Mixed Vegetables',
    category: 'frozen',
    imageUrl: '🥕',
    defaultUnit: 'bags',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Cream of Chicken Soup',
    category: 'pantry',
    imageUrl: '🥫',
    defaultUnit: 'cans',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Pie Crust',
    category: 'frozen',
    imageUrl: '🥧',
    defaultUnit: 'packages',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Hamburger Helper',
    category: 'pantry',
    imageUrl: '🍝',
    defaultUnit: 'boxes',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Pinto Beans',
    category: 'pantry',
    imageUrl: '🫘',
    defaultUnit: 'bags',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Ham Hock',
    category: 'meat',
    imageUrl: '🥩',
    defaultUnit: 'pieces',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Cornmeal',
    category: 'pantry',
    imageUrl: '🌽',
    defaultUnit: 'bags',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'BBQ Sauce',
    category: 'pantry',
    imageUrl: '🍖',
    defaultUnit: 'bottles',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Baked Beans',
    category: 'pantry',
    imageUrl: '🫘',
    defaultUnit: 'cans',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  }
];

// Create meal ingredients
const createMealIngredient = (ingredient: Ingredient, quantity: number, unit?: string, optional: boolean = false): MealIngredient => ({
  id: uuidv4(),
  ingredient,
  quantity,
  unit: unit || ingredient.defaultUnit,
  optional,
});

// Mock meals data with appealing images
export const mockMeals: Meal[] = [
  {
    id: uuidv4(),
    name: 'Spaghetti Carbonara',
    description: 'Classic Italian pasta with eggs, cheese, and pancetta',
    imageUrl: '🍝',
    prepTimeMinutes: 15,
    cookTimeMinutes: 20,
    serves: 4,
    difficultyLevel: 'medium',
    tags: ['italian', 'quick', 'comfort-food'],
    instructions: 'Cook pasta, mix with eggs and cheese, add crispy pancetta',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Pasta')!, 1, 'boxes'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Eggs')!, 0.5, 'dozens'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Cheese')!, 0.5, 'blocks'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Grilled Chicken & Vegetables',
    description: 'Healthy grilled chicken with seasonal roasted vegetables',
    imageUrl: '🍗',
    prepTimeMinutes: 20,
    cookTimeMinutes: 30,
    serves: 4,
    difficultyLevel: 'easy',
    tags: ['healthy', 'grilled', 'high-protein', 'gluten-free'],
    instructions: 'Season and grill chicken, roast vegetables with olive oil',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Chicken Breast')!, 2, 'lbs'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Bell Peppers')!, 3, 'items'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Broccoli')!, 2, 'heads'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Olive Oil')!, 0.25, 'bottles'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Beef Stir Fry',
    description: 'Quick and colorful stir fry with tender beef and crisp vegetables',
    imageUrl: '🥘',
    prepTimeMinutes: 15,
    cookTimeMinutes: 15,
    serves: 4,
    difficultyLevel: 'easy',
    tags: ['quick', 'asian', 'one-pan', 'weeknight'],
    instructions: 'Slice beef thin, stir fry with vegetables over high heat',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Ground Beef')!, 1.5, 'lbs'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Bell Peppers')!, 2, 'items'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Onions')!, 1, 'items'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Rice')!, 2, 'cups'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Salmon with Garlic Spinach',
    description: 'Pan-seared salmon with sautéed garlic spinach',
    imageUrl: '🐟',
    prepTimeMinutes: 10,
    cookTimeMinutes: 20,
    serves: 4,
    difficultyLevel: 'medium',
    tags: ['healthy', 'seafood', 'quick', 'low-carb'],
    instructions: 'Sear salmon skin-side down, sauté spinach with garlic',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Salmon Fillet')!, 2, 'lbs'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Spinach')!, 2, 'bags'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Garlic')!, 1, 'bulbs'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Olive Oil')!, 0.25, 'bottles'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Veggie Omelet',
    description: 'Fluffy eggs with fresh vegetables and cheese',
    imageUrl: '🍳',
    prepTimeMinutes: 5,
    cookTimeMinutes: 10,
    serves: 2,
    difficultyLevel: 'easy',
    tags: ['breakfast', 'vegetarian', 'quick', 'protein'],
    instructions: 'Beat eggs, sauté vegetables, fold in cheese',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Eggs')!, 0.5, 'dozens'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Bell Peppers')!, 1, 'items'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Mushrooms')!, 0.25, 'lbs'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Cheese')!, 0.25, 'blocks'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Garden Fresh Salad',
    description: 'Crisp mixed vegetables with a light vinaigrette',
    imageUrl: '🥗',
    prepTimeMinutes: 15,
    cookTimeMinutes: 0,
    serves: 4,
    difficultyLevel: 'easy',
    tags: ['healthy', 'vegetarian', 'fresh', 'no-cook'],
    instructions: 'Chop vegetables, toss with dressing',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Spinach')!, 1, 'bags'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Tomatoes')!, 2, 'items'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Avocado')!, 2, 'items'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Olive Oil')!, 0.1, 'bottles'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  // Southern Comfort Food Classics
  {
    id: uuidv4(),
    name: 'Meatloaf with Mashed Potatoes & Green Beans',
    description: 'Classic comfort food with tender meatloaf, creamy mashed potatoes, and green beans',
    imageUrl: '🍖',
    prepTimeMinutes: 20,
    cookTimeMinutes: 60,
    serves: 6,
    difficultyLevel: 'medium',
    tags: ['comfort-food', 'american', 'family-dinner', 'hearty'],
    instructions: 'Mix ground beef with breadcrumbs, egg, and seasonings. Bake until cooked through. Serve with mashed potatoes and green beans.',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Ground Beef')!, 2, 'lbs'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Breadcrumbs')!, 1, 'containers'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Ketchup')!, 0.5, 'bottles'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Onions')!, 1, 'items'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Eggs')!, 0.25, 'dozens'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Salt')!, 0.1, 'containers'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Black Pepper')!, 0.1, 'containers'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Potatoes')!, 2, 'lbs'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Butter')!, 4, 'sticks'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Milk')!, 0.25, 'gallons'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Green Beans')!, 2, 'cans'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Spaghetti with Meat Sauce',
    description: 'Classic Italian-American pasta with rich meat sauce',
    imageUrl: '🍝',
    prepTimeMinutes: 15,
    cookTimeMinutes: 30,
    serves: 4,
    difficultyLevel: 'easy',
    tags: ['italian', 'pasta', 'family-dinner', 'weeknight'],
    instructions: 'Brown ground beef, add spaghetti sauce, simmer. Cook pasta according to package directions. Serve with garlic bread.',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Ground Beef')!, 1, 'lbs'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Spaghetti Sauce')!, 1, 'jars'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Spaghetti Noodles')!, 1, 'boxes'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Bread')!, 1, 'loaves', true),
      createMealIngredient(mockIngredients.find(i => i.name === 'Margarine')!, 1, 'containers', true),
      createMealIngredient(mockIngredients.find(i => i.name === 'Garlic Powder')!, 0.1, 'containers', true),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Hamburger Steak with Onions & Gravy',
    description: 'Tender ground beef patties smothered in onion gravy',
    imageUrl: '🥩',
    prepTimeMinutes: 15,
    cookTimeMinutes: 25,
    serves: 4,
    difficultyLevel: 'medium',
    tags: ['comfort-food', 'hearty', 'southern', 'family-dinner'],
    instructions: 'Form ground beef into patties, brown in skillet. Sauté onions, add gravy. Serve with mashed potatoes and corn.',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Ground Beef')!, 1.5, 'lbs'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Onions')!, 2, 'items'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Beef Gravy')!, 2, 'cans'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Potatoes')!, 2, 'lbs'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Corn')!, 1, 'cans'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Chicken & Rice Casserole',
    description: 'Comforting one-dish meal with chicken, rice, and vegetables',
    imageUrl: '🍲',
    prepTimeMinutes: 20,
    cookTimeMinutes: 45,
    serves: 6,
    difficultyLevel: 'easy',
    tags: ['casserole', 'one-dish', 'family-friendly', 'comfort-food'],
    instructions: 'Layer chicken, rice, and vegetables in casserole dish. Pour soup over top and bake until rice is tender.',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Chicken Breast')!, 2, 'lbs'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Rice')!, 2, 'cups'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Cream of Mushroom Soup')!, 2, 'cans'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Onions')!, 1, 'items'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Celery')!, 3, 'stalks'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Tuna Noodle Casserole',
    description: 'Classic comfort casserole with tuna, noodles, and peas topped with crispy chips',
    imageUrl: '🐟',
    prepTimeMinutes: 20,
    cookTimeMinutes: 30,
    serves: 6,
    difficultyLevel: 'easy',
    tags: ['casserole', 'budget-friendly', 'comfort-food', 'family-dinner'],
    instructions: 'Cook noodles, mix with tuna, soup, and peas. Top with crushed chips and bake until bubbly.',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Canned Tuna')!, 2, 'cans'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Egg Noodles')!, 1, 'bags'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Cream of Mushroom Soup')!, 1, 'cans'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Peas')!, 1, 'bags'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Potato Chips')!, 1, 'bags'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Pork Chops with Rice & Gravy',
    description: 'Tender pork chops with seasoned rice and rich gravy',
    imageUrl: '🥩',
    prepTimeMinutes: 15,
    cookTimeMinutes: 30,
    serves: 4,
    difficultyLevel: 'medium',
    tags: ['pork', 'southern', 'comfort-food', 'hearty'],
    instructions: 'Season and brown pork chops. Make gravy from pan drippings. Serve over rice.',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Pork Chops')!, 2, 'lbs'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Flour')!, 0.5, 'bags'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Onions')!, 1, 'items'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Chicken Broth')!, 1, 'cartons'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Rice')!, 2, 'cups'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Sloppy Joes',
    description: 'Classic messy sandwich with seasoned ground beef',
    imageUrl: '🍔',
    prepTimeMinutes: 10,
    cookTimeMinutes: 15,
    serves: 4,
    difficultyLevel: 'easy',
    tags: ['sandwich', 'kid-friendly', 'quick', 'weeknight'],
    instructions: 'Brown ground beef, add Manwich sauce, simmer. Serve on hamburger buns.',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Ground Beef')!, 1, 'lbs'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Manwich Sauce')!, 1, 'cans'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Hamburger Buns')!, 1, 'packages'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Fried Chicken with Mashed Potatoes',
    description: 'Crispy fried chicken served with creamy mashed potatoes and peas',
    imageUrl: '🍗',
    prepTimeMinutes: 30,
    cookTimeMinutes: 25,
    serves: 4,
    difficultyLevel: 'medium',
    tags: ['southern', 'fried', 'comfort-food', 'family-dinner'],
    instructions: 'Season chicken pieces, dredge in flour, fry until golden. Serve with instant mashed potatoes and canned peas.',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Chicken Pieces')!, 3, 'lbs'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Flour')!, 1, 'bags'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Salt')!, 0.1, 'containers'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Black Pepper')!, 0.1, 'containers'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Vegetable Oil')!, 1, 'bottles'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Potatoes')!, 2, 'lbs'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Peas')!, 1, 'bags'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Chili with Saltine Crackers',
    description: 'Hearty chili with ground beef and beans, served with crackers',
    imageUrl: '🌶️',
    prepTimeMinutes: 20,
    cookTimeMinutes: 45,
    serves: 6,
    difficultyLevel: 'easy',
    tags: ['chili', 'warming', 'hearty', 'budget-friendly'],
    instructions: 'Brown ground beef, add beans, tomatoes, and spices. Simmer until thick. Serve with saltines.',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Ground Beef')!, 1, 'lbs'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Kidney Beans')!, 2, 'cans'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Diced Tomatoes')!, 1, 'cans'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Chili Powder')!, 0.1, 'containers'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Saltine Crackers')!, 1, 'boxes'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Cube Steak & Gravy',
    description: 'Tender cube steak smothered in rich onion gravy',
    imageUrl: '🥩',
    prepTimeMinutes: 15,
    cookTimeMinutes: 30,
    serves: 4,
    difficultyLevel: 'medium',
    tags: ['comfort-food', 'tender', 'southern', 'hearty'],
    instructions: 'Brown cube steaks, make gravy with onions and beef broth. Serve with mashed potatoes and bread.',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Cube Steak')!, 2, 'lbs'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Flour')!, 0.5, 'bags'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Onions')!, 1, 'items'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Chicken Broth')!, 1, 'cartons'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Potatoes')!, 2, 'lbs'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Bread')!, 1, 'loaves'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Goulash',
    description: 'One-pot comfort meal with ground beef, pasta, and tomatoes',
    imageUrl: '🍝',
    prepTimeMinutes: 15,
    cookTimeMinutes: 25,
    serves: 6,
    difficultyLevel: 'easy',
    tags: ['one-pot', 'hearty', 'family-dinner', 'comfort-food'],
    instructions: 'Brown ground beef with onions, add macaroni, tomatoes, and sauce. Simmer until pasta is tender.',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Ground Beef')!, 1, 'lbs'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Elbow Macaroni')!, 1, 'boxes'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Diced Tomatoes')!, 1, 'cans'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Tomato Sauce')!, 1, 'cans'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Onions')!, 1, 'items'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Hot Dogs with Pork & Beans',
    description: 'Simple comfort meal with hot dogs and beans',
    imageUrl: '🌭',
    prepTimeMinutes: 10,
    cookTimeMinutes: 15,
    serves: 4,
    difficultyLevel: 'easy',
    tags: ['simple', 'kid-friendly', 'quick', 'budget-friendly'],
    instructions: 'Heat hot dogs (boiled or pan-fried) and warm pork and beans. Serve with bread or buns.',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Hot Dogs')!, 1, 'packages'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Pork & Beans')!, 2, 'cans'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Bread')!, 1, 'loaves'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Baked Chicken Legs with Rice',
    description: 'Budget-friendly baked chicken drumsticks with seasoned rice and corn',
    imageUrl: '🍗',
    prepTimeMinutes: 15,
    cookTimeMinutes: 45,
    serves: 4,
    difficultyLevel: 'easy',
    tags: ['budget-friendly', 'easy', 'baked', 'family-dinner'],
    instructions: 'Season chicken legs with salt, pepper, and paprika. Bake until golden. Serve with rice and corn.',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Chicken Drumsticks')!, 2, 'lbs'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Salt')!, 0.1, 'containers'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Black Pepper')!, 0.1, 'containers'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Paprika')!, 0.1, 'containers'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Rice')!, 2, 'cups'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Corn')!, 1, 'cans'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Salisbury Steak with Mashed Potatoes',
    description: 'Ground beef patties with savory onion gravy and creamy mashed potatoes',
    imageUrl: '🥩',
    prepTimeMinutes: 20,
    cookTimeMinutes: 25,
    serves: 4,
    difficultyLevel: 'medium',
    tags: ['comfort-food', 'hearty', 'family-dinner', 'classic'],
    instructions: 'Form beef patties with onion soup mix, brown and simmer in gravy. Serve with mashed potatoes.',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Ground Beef')!, 1.5, 'lbs'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Onion Soup Mix')!, 1, 'packets'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Beef Gravy')!, 2, 'cans'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Potatoes')!, 2, 'lbs'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Chicken & Dumplings',
    description: 'Southern comfort soup with tender chicken and fluffy dumplings',
    imageUrl: '🍲',
    prepTimeMinutes: 25,
    cookTimeMinutes: 40,
    serves: 6,
    difficultyLevel: 'medium',
    tags: ['southern', 'comfort-food', 'warming', 'hearty'],
    instructions: 'Simmer chicken with vegetables in broth. Add Bisquick dumplings and cook until fluffy.',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Chicken Breast')!, 2, 'lbs'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Bisquick Mix')!, 1, 'boxes'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Celery')!, 3, 'stalks'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Onions')!, 1, 'items'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Chicken Broth')!, 2, 'cartons'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Fish Sticks with Mac & Cheese',
    description: 'Kid-friendly frozen fish sticks with creamy mac and cheese and peas',
    imageUrl: '🐟',
    prepTimeMinutes: 5,
    cookTimeMinutes: 20,
    serves: 4,
    difficultyLevel: 'easy',
    tags: ['kid-friendly', 'quick', 'easy', 'frozen'],
    instructions: 'Bake frozen fish sticks according to package directions. Prepare boxed mac and cheese. Heat peas.',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Fish Sticks')!, 1, 'boxes'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Kraft Mac & Cheese')!, 2, 'boxes'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Peas')!, 1, 'bags'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Shepherd\'s Pie (Southern Style)',
    description: 'Ground beef with corn and mushroom soup topped with mashed potatoes',
    imageUrl: '🥧',
    prepTimeMinutes: 25,
    cookTimeMinutes: 30,
    serves: 6,
    difficultyLevel: 'medium',
    tags: ['comfort-food', 'one-dish', 'southern', 'hearty'],
    instructions: 'Brown ground beef, mix with corn and soup. Top with mashed potatoes and bake until golden.',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Ground Beef')!, 1.5, 'lbs'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Corn')!, 1, 'cans'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Cream of Mushroom Soup')!, 1, 'cans'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Potatoes')!, 3, 'lbs'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Bologna Sandwiches & Chips',
    description: 'Simple nostalgic lunch with sliced bologna sandwiches and potato chips',
    imageUrl: '🥪',
    prepTimeMinutes: 10,
    cookTimeMinutes: 0,
    serves: 4,
    difficultyLevel: 'easy',
    tags: ['simple', 'lunch', 'nostalgic', 'no-cook'],
    instructions: 'Layer bologna on bread with mayo and mustard. Serve with potato chips.',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Bologna')!, 1, 'packages'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Bread')!, 1, 'loaves'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Mayonnaise')!, 0.25, 'jars'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Mustard')!, 0.25, 'bottles'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Potato Chips')!, 1, 'bags'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Cabbage & Smoked Sausage',
    description: 'Hearty and budget-friendly dish with tender cabbage and savory smoked sausage',
    imageUrl: '🥬',
    prepTimeMinutes: 15,
    cookTimeMinutes: 30,
    serves: 4,
    difficultyLevel: 'easy',
    tags: ['hearty', 'budget-friendly', 'southern', 'one-pot'],
    instructions: 'Sauté onions and sausage, add cabbage and cook until tender with butter and seasonings.',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Smoked Sausage')!, 1, 'packages'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Cabbage')!, 1, 'heads'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Onions')!, 1, 'items'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Butter')!, 2, 'sticks'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Chicken Pot Pie (Shortcut)',
    description: 'Easy comfort food using canned chicken and refrigerated pie crust',
    imageUrl: '🥧',
    prepTimeMinutes: 20,
    cookTimeMinutes: 35,
    serves: 6,
    difficultyLevel: 'easy',
    tags: ['comfort-food', 'easy', 'shortcut', 'family-dinner'],
    instructions: 'Mix canned chicken with mixed vegetables and soup. Pour into pie crust and bake until golden.',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Chicken Breast')!, 1, 'lbs'), // Using fresh chicken instead of canned
      createMealIngredient(mockIngredients.find(i => i.name === 'Mixed Vegetables')!, 1, 'bags'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Cream of Chicken Soup')!, 1, 'cans'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Pie Crust')!, 1, 'packages'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Hamburger Helper',
    description: 'Quick family-friendly meal using boxed Hamburger Helper mix',
    imageUrl: '🍝',
    prepTimeMinutes: 10,
    cookTimeMinutes: 20,
    serves: 4,
    difficultyLevel: 'easy',
    tags: ['quick', 'family-friendly', 'easy', 'boxed-mix'],
    instructions: 'Brown ground beef, add Hamburger Helper mix and milk according to package directions.',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Hamburger Helper')!, 1, 'boxes'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Ground Beef')!, 1, 'lbs'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Milk')!, 0.25, 'gallons'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Pinto Beans with Cornbread',
    description: 'Southern staple with hearty pinto beans and homemade cornbread',
    imageUrl: '🫘',
    prepTimeMinutes: 30,
    cookTimeMinutes: 120,
    serves: 6,
    difficultyLevel: 'medium',
    tags: ['southern', 'hearty', 'budget-friendly', 'traditional'],
    instructions: 'Soak beans overnight, cook with ham hock until tender. Make cornbread with cornmeal, egg, milk, and oil.',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Pinto Beans')!, 1, 'bags'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Ham Hock')!, 1, 'pieces'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Onions')!, 1, 'items'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Cornmeal')!, 1, 'bags'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Eggs')!, 0.25, 'dozens'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Milk')!, 0.25, 'gallons'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Vegetable Oil')!, 0.25, 'bottles'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'BBQ Chicken Legs',
    description: 'Flavorful grilled chicken legs with barbecue sauce, bread, and baked beans',
    imageUrl: '🍗',
    prepTimeMinutes: 15,
    cookTimeMinutes: 30,
    serves: 4,
    difficultyLevel: 'easy',
    tags: ['grilled', 'flavorful', 'bbq', 'summer'],
    instructions: 'Grill chicken legs, basting with BBQ sauce. Serve with bread and baked beans.',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Chicken Drumsticks')!, 2, 'lbs'),
      createMealIngredient(mockIngredients.find(i => i.name === 'BBQ Sauce')!, 1, 'bottles'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Bread')!, 1, 'loaves'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Baked Beans')!, 2, 'cans'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Egg Salad Sandwiches',
    description: 'Light protein-rich lunch with creamy egg salad and chips',
    imageUrl: '🥪',
    prepTimeMinutes: 20,
    cookTimeMinutes: 15,
    serves: 4,
    difficultyLevel: 'easy',
    tags: ['light', 'lunch', 'protein-rich', 'cold'],
    instructions: 'Boil eggs, cool and chop. Mix with mayo, mustard, salt, and pepper. Serve on bread with chips.',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Eggs')!, 1, 'dozens'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Mayonnaise')!, 0.5, 'jars'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Mustard')!, 0.1, 'bottles'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Salt')!, 0.1, 'containers'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Black Pepper')!, 0.1, 'containers'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Bread')!, 1, 'loaves'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Potato Chips')!, 1, 'bags'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    name: 'Rice & Gravy with Leftover Meat',
    description: 'Budget-friendly comfort meal using leftover meat drippings over rice',
    imageUrl: '🍚',
    prepTimeMinutes: 15,
    cookTimeMinutes: 20,
    serves: 4,
    difficultyLevel: 'easy',
    tags: ['budget-friendly', 'comfort', 'leftovers', 'simple'],
    instructions: 'Make gravy from leftover pan drippings, serve over white rice with biscuits or bread.',
    ingredients: [
      createMealIngredient(mockIngredients.find(i => i.name === 'Rice')!, 2, 'cups'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Flour')!, 0.25, 'bags'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Chicken Broth')!, 1, 'cartons'),
      createMealIngredient(mockIngredients.find(i => i.name === 'Bread')!, 1, 'loaves'),
    ],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  }
];

// Mock calendar meals for the next week
export const mockCalendarMeals: CalendarMeal[] = [
  {
    id: uuidv4(),
    meal: mockMeals[0],
    scheduledDate: format(addDays(new Date(), 1), 'yyyy-MM-dd'),
    mealType: 'dinner',
    servingSize: 4,
    completed: false,
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    meal: mockMeals[1],
    scheduledDate: format(addDays(new Date(), 2), 'yyyy-MM-dd'),
    mealType: 'dinner',
    servingSize: 4,
    completed: false,
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: uuidv4(),
    meal: mockMeals[2],
    scheduledDate: format(addDays(new Date(), 3), 'yyyy-MM-dd'),
    mealType: 'dinner',
    servingSize: 4,
    completed: false,
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
];

// Mock shopping list
export const mockShoppingList: ShoppingList = {
  id: uuidv4(),
  name: 'This Week\'s Shopping',
  tripDate: format(addDays(new Date(), 1), 'yyyy-MM-dd'),
  storeName: 'Whole Foods',
  createdAt: new Date().toISOString(),
};

// Generate shopping list items from calendar meals
export const generateShoppingListItems = (calendarMeals: CalendarMeal[]): ShoppingListItem[] => {
  const items: ShoppingListItem[] = [];
  const ingredientMap = new Map<string, { quantity: number; unit: string; ingredient: Ingredient }>();

  // Aggregate ingredients from all planned meals
  calendarMeals.forEach(calendarMeal => {
    calendarMeal.meal.ingredients.forEach(mealIngredient => {
      const key = mealIngredient.ingredient.id;
      const scaledQuantity = mealIngredient.quantity * (calendarMeal.servingSize / calendarMeal.meal.serves);
      
      if (ingredientMap.has(key)) {
        const existing = ingredientMap.get(key)!;
        existing.quantity += scaledQuantity;
      } else {
        ingredientMap.set(key, {
          quantity: scaledQuantity,
          unit: mealIngredient.unit,
          ingredient: mealIngredient.ingredient,
        });
      }
    });
  });

  // Convert to shopping list items
  ingredientMap.forEach(({ quantity, unit, ingredient }) => {
    items.push({
      id: uuidv4(),
      listId: mockShoppingList.id,
      ingredient,
      quantity,
      unit,
      priority: 'normal',
      category: ingredient.category,
      checked: false,
      addedManually: false,
      createdAt: new Date().toISOString(),
    });
  });

  // Add some manually added items
  const manualItems = [
    {
      ingredient: mockIngredients.find(i => i.name === 'Milk')!,
      quantity: 1,
      priority: 'urgent' as const,
    },
    {
      ingredient: mockIngredients.find(i => i.name === 'Bread')!,
      quantity: 2,
      priority: 'normal' as const,
    },
  ];

  manualItems.forEach(item => {
    items.push({
      id: uuidv4(),
      listId: mockShoppingList.id,
      ingredient: item.ingredient,
      quantity: item.quantity,
      unit: item.ingredient.defaultUnit,
      priority: item.priority,
      category: item.ingredient.category,
      checked: false,
      addedManually: true,
      createdAt: new Date().toISOString(),
    });
  });

  return items;
};

export const mockShoppingListItems = generateShoppingListItems(mockCalendarMeals);

// Helper function to get category info
export const getCategoryInfo = (categoryName: string) => {
  return INGREDIENT_CATEGORIES.find(cat => cat.name === categoryName) || {
    name: categoryName,
    color: 'bg-gray-100 text-gray-800',
    icon: '📦',
  };
};
